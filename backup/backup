#!/bin/bash
source /dreamhack/local/settings.root

DHROOT="/dreamhack"
OUT="$DHROOT/backup/out"
HINTS="$OUT"/install-hints
umask 0077
rm "$HINTS"/*
rmdir "$HINTS"
rm "$OUT"/*
rmdir "$OUT"

mkdir "$OUT"
mkdir "$HINTS"

echo   BACKING UP:
echo Getting currently checked out commit...
cd "$DHROOT"
CURRENTCOMMIT=`git rev-parse HEAD`
cd /root

# we'll continue backing up /dreamhack as it doesn't take much space and hey, it's another backup. We don't need it though.
echo Backing up /dreamhack...
tar zcf "$OUT"/dreamhack.tar.gz -X "$DHROOT"/backup/dreamhack-exclude.lst "$DHROOT"

echo Backing up /home/perlbal/sites...
tar zcf "$OUT"/perlbal-sites.tar.gz /home/perlbal/sites

echo Dumping database...
mysqldump -u"$dh_db_readwrite_username" -p"$dh_db_readwrite_password" dreamhacks > "$OUT"/dreamhacks-database.sql

echo
echo   GENERATING INSTALL HINTS:
echo Dumping "\"dpkg -l\"" output...
dpkg -l > "$HINTS"/dpkg-l.txt
echo Finding installed Perl modules...
#perl -MCPAN -e 'print CPAN::Shell->r' > "$HINTS"/perl-modules.txt
PERLDIRS=`perl -e 'print join(" ", @INC) . "\n";'`
DOMODS=""
for i in $PERLDIRS; do
  if [ "$i" != "." ]; then
    echo "* $i"
    MODULES=`find $i/ -regex '.*/[^\.][^/\.]*\.pm'`
    for j in $MODULES; do
      j=${j/#$i\//}
      j=${j/%.pm/}
      j=${j//\//::}
      DOMODS="$DOMODS
$j"
    done
  fi
done
sort <<MODS | uniq >"$HINTS"/modules.tmp
$DOMODS
MODS
echo Querying CPAN to gather distributions...
#perl -MCPAN -ne 'chomp; my $m = CPAN::Shell->expand("Module", "$_"); print STDERR $m->{"RO"}->{"CPAN_FILE"} . "\n" if defined $m;' <"$HINTS"/modules.tmp >/dev/null 2>>"$HINTS"/perl-distribs.tmp
perl -MCPAN -ne 'chomp; my $m = CPAN::Shell->expand("Module", "$_"); if (defined $m) { my $o = $m->cpan_file; if ($o=~/^Contact /) { $o = "$_: $o"; } print STDERR "$o\n"; }' <"$HINTS"/modules.tmp >/dev/null 2>>"$HINTS"/perl-distribs.tmp
sort "$HINTS"/perl-distribs.tmp | uniq > "$HINTS"/perl-distribs.txt
rm "$HINTS"/*.tmp

BACKDATE=`date --rfc-3339=seconds`

EXCLUDEFILES=`cat "$DHROOT"/backup/dreamhack-exclude.lst`

echo Writing README file...
cat <<README > "$OUT"/README
This backup was made on $BACKDATE. HEAD was set to commit $CURRENTCOMMIT.

This backup contains:

* dreamhack.tar.gz
    A full backup of the /dreamhack directory, excluding the following
    files/directories:

$EXCLUDEFILES

* perlbal-sites.tar.gz
    All the site configs for Perlbal.

* dreamhacks-database.sql
    A complete backup of the 'dreamhacks' database.

* install-hints/
    A directory that contains listings of all the Ubuntu packages and Perl
    distributions that were installed at the time this backup was made. This
    may assist you in restoring any needed packages/modules.

This backup may be used for creating a new server in conjunction with the
install instructions, but it is strongly recommended that you use the Git
repository at https://github.com/dreamwidth/dreamhack instead. (See the INSTALL
file in the root of the repository for installation instructions.)

Should you need to use this backup to set up a new server, however,
installation instructions may be found in the INSTALL file in
dreamhacks.tar.gz; when asked to clone the repository, you should untar this
file instead. Please also note that this backup does not include the
/dreamhack/.git directory; you will need to create it yourself by running the
following commands after untarring dreamhack.tar.gz:

cd $DHROOT
git clone --bare git://github.com/dreamwidth/dreamhack .git
git config core.bare false
git reset $CURRENTCOMMIT

This will create the Git repository and set its HEAD to the commit that was
currently checked out when this backup was made without touching the working
directory, which should preserve data integrity.

Please note that this backup does not include users' home directories, merely
Dreamhack account data.
README

echo Making tarball...
SHORTDATE=`date +%F`
TARBALL="$DHROOT/backup/$SHORTDATE.tar.gz"
tar -zcf "$TARBALL" -C "$OUT" .
chgrp dreamhack-backup "$TARBALL"
chmod g+r "$TARBALL"

echo Done!
